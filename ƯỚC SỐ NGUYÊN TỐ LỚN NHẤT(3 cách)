package BASIC;
import java.math.BigInteger;
import java.util.*;
import java.lang.*;
import java.io.*;
import static java.lang.Math.*;
public class Basic {
    public static long pt(long n){
        long res=0;
        for(long i=2;i<=sqrt(n);i++){
                while(n%i==0){
                    res=i;//res sẽ lưu thằng i cuối cùng => lớn nhất
                    n/=i;
                }
            }
        if(n!=1) res=n;
        return res;
    }
    public static long pt2(long n){
        Vector<Long> v = new Vector<>();
        for(long i=2;i<=sqrt(n);i++){
            if(n%i==0){
                while(n%i==0){
                    v.addElement(i);//Lưu hết lại xong tìm max, ns chung là làm trâu
                    n/=i;
                }
            }
        }
        if(n!=1) v.addElement(n);
        return Collections.max(v);
    }
    public static long pt3(long n) {
        long maxPrime = -1;

        // Loại bỏ tất cả các ước số là 2
        while (n % 2 == 0) {
            maxPrime = 2;
            n /= 2;
        }

        // Loại bỏ tất cả các ước số lẻ từ 3 trở đi
        for (long i = 3; i <= sqrt(n); i += 2) {
            while (n % i == 0) {
                maxPrime = i;
                n /= i;
            }
        }

        // Nếu N vẫn lớn hơn 2, thì chính nó là ước số nguyên tố lớn nhất
        if (n > 2) {
            maxPrime = n;
        }

        return maxPrime;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        while(t-->0){
            long n = scanner.nextInt();
            System.out.println(pt(n));
        }
    }
}

